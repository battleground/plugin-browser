apply plugin: 'maven'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

def getRepositoryUsername() {
    return properties.getProperty("nexus.username")
}

def getRepositoryPassword() {
    return properties.getProperty("nexus.password")
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                pom.groupId = groupId
                pom.artifactId = artifactId
                pom.version = version
                repository(url: properties.getProperty("nexus.RELEASE_REPOSITORY_URL")) {
                    authentication(userName: properties.getProperty("nexus.username"), password: properties.getProperty("nexus.password"))
                }
                snapshotRepository(url: properties.getProperty("nexus.SNAPSHOT_REPOSITORY_URL")) {
                    authentication(userName: properties.getProperty("nexus.username"), password: properties.getProperty("nexus.password"))
                }
            }
        }
    }
//    task androidJavadocs(type: Javadoc) {
//        source = android.sourceSets.main.java.srcDirs
//        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    }
//    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//        classifier = 'javadoc'
//        from androidJavadocs.destinationDir
//    }
//    task androidSourcesJar(type: Jar) {
//        classifier = 'sources'
//        from android.sourceSets.main.java.sourceFiles
//    }
    artifacts {
//        archives androidSourcesJar
//        archives androidJavadocsJar
    }
}